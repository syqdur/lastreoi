AUFGABE: ProfileHeader Daten-Anzeige beim ersten Besuch fixen
Bitte f√ºhre folgende √Ñnderungen in meinem React-Code durch:
DATEI 1: ProfileHeader.tsx
√Ñnderung 1.1:
FINDE diesen Code-Block:
javascript// Use gallery profile data from admin panel "Galerie Einstellungen"
// Wait for real galleryProfileData to load - don't show old gallery creation data
const displayData = React.useMemo(() => {
  // Only show data when we have actual gallery profile data loaded
  if (galleryProfileData) {
    return galleryProfileData;
  }
  // Return null to show loading state until real data arrives
  return null;
}, [galleryProfileData]);
ERSETZE mit:
javascript// Use gallery profile data from admin panel "Galerie Einstellungen"
// Provide default data immediately while waiting for Firebase data
const displayData = React.useMemo(() => {
  console.log('üîç ProfileHeader displayData memo:', {
    galleryProfileData,
    galleryName: gallery?.eventName,
    hasGalleryProfileData: !!galleryProfileData
  });
  
  // If we have gallery profile data from Firebase, use it
  if (galleryProfileData) {
    console.log('‚úÖ Using Firebase gallery profile data:', galleryProfileData);
    return galleryProfileData;
  }
  
  // Otherwise, provide default data based on gallery info
  // This ensures the header is always visible, even on first load
  const fallbackData = {
    name: gallery?.eventName || 'Gallery',
    bio: gallery ? `${gallery.eventName} - Teilt eure sch√∂nsten Momente mit uns! üì∏` : '',
    countdownDate: gallery?.eventDate || null,
    countdownEndMessage: 'Der gro√üe Tag ist da! üéâ',
    countdownMessageDismissed: false,
    profilePicture: null
  };
  console.log('üìã Using fallback data:', fallbackData);
  return fallbackData;
}, [galleryProfileData, gallery]);
√Ñnderung 1.2:
L√ñSCHE diese Zeilen komplett:
javascript// Show loading state while waiting for real gallery profile data
if (!displayData) {
  return <HeaderLoadingSkeleton isDarkMode={isDarkMode} />;
}
DATEI 2: GalleryApp.tsx
√Ñnderung 2.1:
FINDE den onSnapshot Listener Block (suche nach "Gallery profile snapshot received"):
javascriptconst unsubscribe = onSnapshot(profileDocRef, (docSnapshot: any) => {
  console.log('üì° Gallery profile snapshot received for:', gallery.id);
  if (docSnapshot.exists()) {
    const firebaseData = docSnapshot.data();
    console.log('‚úÖ Gallery profile updated via real-time listener:', firebaseData);
    console.log('üîç Current gallery name:', gallery.eventName);
    console.log('üîç Firebase profile name:', firebaseData.name);

    // Always apply Firebase data if it exists - this contains customized gallery settings
    console.log('üîÑ Applying real-time Firebase profile data from Gallery Settings');
    setGalleryProfileData(firebaseData);
  } else {
    console.log('üìù No Firebase profile found, creating default gallery profile');
    // Create default profile if none exists
    const defaultProfile = {
      name: gallery.eventName,
      bio: `${gallery.eventName} - Teilt eure sch√∂nsten Momente mit uns! üì∏`,
      countdownDate: null, // Disabled by default
      countdownEndMessage: 'Der gro√üe Tag ist da! üéâ',
      countdownMessageDismissed: false,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    console.log('üìã Setting default profile:', defaultProfile);
    setGalleryProfileData(defaultProfile);
  }
}, (error: any) => {
  console.error('‚ùå Error in gallery profile listener:', error);
  // Set default profile on error
  const defaultProfile = {
    name: gallery.eventName,
    bio: `${gallery.eventName} - Teilt eure sch√∂nsten Momente mit uns! üì∏`,
    countdownDate: null,
    countdownEndMessage: 'Der gro√üe Tag ist da! üéâ',
    countdownMessageDismissed: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  };
  console.log('üìã Setting default profile after error:', defaultProfile);
  setGalleryProfileData(defaultProfile);
});
ERSETZE den GESAMTEN onSnapshot Block mit:
javascriptconst unsubscribe = onSnapshot(profileDocRef, (docSnapshot: any) => {
  console.log('üì° Gallery profile snapshot received for:', gallery.id);
  if (docSnapshot.exists()) {
    const firebaseData = docSnapshot.data();
    console.log('‚úÖ Gallery profile updated via real-time listener:', firebaseData);
    console.log('üîç Current gallery name:', gallery.eventName);
    console.log('üîç Firebase profile name:', firebaseData.name);
    console.log('üéØ Setting galleryProfileData state with Firebase data');

    // Always apply Firebase data if it exists - this contains customized gallery settings
    setGalleryProfileData(firebaseData);
    
    // Force re-render to ensure ProfileHeader gets the update
    setTimeout(() => {
      console.log('üîÑ Verifying galleryProfileData was set:', firebaseData);
    }, 100);
  } else {
    console.log('üìù No Firebase profile found, will keep immediate profile');
    // Don't override the immediate profile if no Firebase data exists
    // The immediate profile was already set above
  }
}, (error: any) => {
  console.error('‚ùå Error in gallery profile listener:', error);
  // Don't set default profile on error - keep the immediate profile
  console.log('üìã Keeping immediate profile after error');
});
√Ñnderung 2.2:
FINDE in der ProfileEditModal onSave Funktion diese Zeilen:
javascriptawait setDoc(profileDocRef, updatedGalleryProfile, { merge: true });

setGalleryProfileData(updatedGalleryProfile);
setShowProfileEditModal(false);
console.log('‚úÖ Gallery profile updated successfully');
ERSETZE mit:
javascriptawait setDoc(profileDocRef, updatedGalleryProfile, { merge: true });

// Update local state immediately for better UX
// The onSnapshot listener will also update it, but this prevents delay
setGalleryProfileData(updatedGalleryProfile);

// The onSnapshot listener should automatically update galleryProfileData
// But let's log to verify
console.log('‚úÖ Gallery profile saved to Firebase successfully');
console.log('‚è≥ Waiting for onSnapshot to update galleryProfileData...');

setShowProfileEditModal(false);
ZIEL: Nach diesen √Ñnderungen soll der ProfileHeader beim ersten Besuch nach der User-Registrierung sofort die Gallery-Daten anzeigen, anstatt einen Loading-State zu zeigen.